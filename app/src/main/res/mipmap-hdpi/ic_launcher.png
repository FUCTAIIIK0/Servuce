package com.lampa.eyesmart.services;

import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.util.Log;

import com.lampa.eyesmart.activities.watch.FindActivity;
import com.lampa.eyesmart.activities.ShadowActivity;
import com.lampa.objects.BlueObject;
import com.lampa.eyesmart.activities.watch.CallActivity;
import com.lampa.eyesmart.activities.OrderActivity;
import com.lampa.eyesmart.activities.PatrolActivity;
import com.lampa.eyesmart.components.Filters;
import com.lampa.objects.HeartObject;
import com.lampa.objects.TaskObject;

import java.util.Date;

import app.akexorcist.bluetotohspp.library.BluetoothSPP;

/**
 * Created by User on 26.02.2018.
 */
public class WatchService extends BaseService implements SensorEventListener, BluetoothSPP.BluetoothConnectionListener, BluetoothSPP.OnDataReceivedListener {
    public static final String TAG = "WatchService";
    private ServiceReceiver serviceReceiver = new ServiceReceiver();
    private Date lastSensorValue = new Date();
    /**
     *
     */
    @Override
    public void onCreate() {
        super.onCreate();

        SensorManager sensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);

        Sensor mHeartRateSensor = sensorManager.getDefaultSensor(Sensor.TYPE_HEART_RATE);
        sensorManager.registerListener(this, mHeartRateSensor, SensorManager.SENSOR_DELAY_NORMAL);

        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(Filters.ACTION_RESULT_CALL);
        intentFilter.addAction(Filters.ACTION_RESULT_ORDER);
        intentFilter.addAction(Filters.ACTION_RESULT_PATROL);
        registerReceiver(serviceReceiver, intentFilter);


        /**
         *
         */
        if(bluetoothSPP != null) {
            bluetoothSPP.setOnDataReceivedListener(this);
            bluetoothSPP.setBluetoothConnectionListener(this);

            connectToBT();
        }

        // echo thread
        new Thread(new Runnable() {
            @Override
            public void run() {
                while(true) {
                    try {
                        if(BT_CONNECT) {
                            if(System.currentTimeMillis() - lastMessage > 11000) {
                                bluetoothSPP.disconnect();
                                lastMessage = System.currentTimeMillis();
                            }
                        }

                        Thread.sleep(10000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }).start();


        IntentFilter bluefilter =